- hosts: local
  become: true
  tasks:

    - name: Ping localhost
      ping:

    - name: Update apt package index
      apt:
        update_cache: yes

    - name: Upgrade all packages to the latest version
      apt:
        upgrade: dist
        update_cache: yes
      
    - name: Install required system packages
      apt:
        pkg:
          - python3-pip
          - virtualenv
          - python3-setuptools

        state: latest
        update_cache: true

    #- name: Add Docker GPG apt Key
    #  apt_key:
    #    url: https://download.docker.com/linux/ubuntu/gpg
    #    state: present

    #- name: Add Docker Repository
    #  apt_repository:
    #    repo: deb https://download.docker.com/linux/ubuntu jammy stable
    #    state: present

    #- name: Update apt and install docker-ce
    #  apt:
    #    name: docker-ce
    #    state: latest
    #    update_cache: true
    
    #- name: Install Docker and related packages
    #  apt:
    #    pkg:
    #      - docker-ce-cli
    #      - containerd.io
    #      - docker-buildx-plugin
    #      - docker-compose-plugin
    #    state: present
    #    update_cache: yes 
    
    - name: Install NGINX
      apt:
        name: nginx
        state: present

    - name: Install Certbot and the NGINX plugin
      apt:
        name:
          - certbot
          - python3-certbot-nginx
        state: present
    
    - name: Stop NGINX
      ansible.builtin.systemd:
        name: nginx
        state: stopped

    - name: Obtain or renew SSL certificates with Certbot
      command: certbot certonly --non-interactive --nginx --agree-tos --email abhishekprakash47@gmail.com -d meabhi.me
      
    
    - name : Copy the Nginx Conf file
      ansible.builtin.copy:
        src: /home/ubuntu/website-deployment/nginx-default.conf
        dest: /etc/nginx/sites-available/default
        owner: root
        group: root
        mode: '0644'
      
    - name: Reload NGINX
      ansible.builtin.systemd:
        name: nginx
        state: reloaded

    #- name: Log into DockerHub
    #  docker_login:
    #    username: "{{ lookup('env', 'DOCKERHUB_USERNAME') }}"
    #    password: "{{ lookup('env', 'DOCKERHUB_PASSWORD') }}"

    #- name: Run Docker without sudo add group
    #  ansible.builtin.command:
    #    cmd: sudo groupadd docker
    #  ignore_errors: yes
        
    #- name: Run Docker without sudo 
    #  ansible.builtin.command:
    #    cmd: sudo gpasswd -a $USER docker  
    #  ignore_errors: yes
    
    #- name: Create Docker network
    #  ansible.builtin.command:
    #    cmd: docker network create my_network
    #  ignore_errors: yes
    
    #- name: Run Docker compose up
    #  ansible.builtin.command:
    #    cmd: sudo docker compose up -d
    
    - name: Install pymongo for Python 3
      apt:
        name: python3-pymongo
        state: present
        update_cache: yes
    
    #- name: Injest the mongo data
    #  ansible.builtin.command:
    #    cmd: python3 /home/ubuntu/Website-Deployment/mongo/bulk_data_insertion.py

    #- name: Run the recovery script in the background
    #  ansible.builtin.command: nohup python3 /home/ubuntu/Website-Deployment/start_recover_services.py > /home/ubuntu/Website-Deployment/output.log 2>&1 &
    #  async: 1  # Start the job in the background and return immediately
    #  poll: 0   #Do not wait for the job to finish

