# This is the file for repo setup to install dependicies and build the repo if need in virtual env

- name: Set up and install the personal portfolio frontend
  become: true
  become_user: ubuntu
  args:
    chdir: /home/ubuntu/personal-portfolio-frontend
  shell: |
    rm -rf .next node_modules package-lock.json
    npm install
    npm run build

- name: Set up and install the api gateway service
  become: true
  become_user: ubuntu
  args:
    chdir: /home/ubuntu/api-gateway-service
  shell: |
    npm install
    npm run build


- name: Install Python dependencies in virtualenv for mongo access service
  become: true
  become_user: ubuntu
  args:
    chdir: /home/ubuntu/mongo-access-service
  shell: /home/ubuntu/.venvs/global/bin/pip install -r requirements.txt


- name: Install Python dependencies in virtualenv for static media server
  become: true
  become_user: ubuntu
  args:
    chdir: /home/ubuntu/static-media-server
  shell: /home/ubuntu/.venvs/global/bin/pip install -r requirements.txt


- name: Install Python dependencies in virtualenv for tinyurl service
  become: true
  become_user: ubuntu
  args:
    chdir: /home/ubuntu/tinyurl-service
  shell: /home/ubuntu/.venvs/global/bin/pip install -r requirements.txt

- name: Install Python dependencies in virtualenv for academic website
  become: true
  become_user: ubuntu
  args:
    chdir: /home/ubuntu/academic-website
  shell: /home/ubuntu/.venvs/global/bin/pip install -r requirements.txt


- name: Install Python dependencies in virtualenv for typesense-etl
  become: true
  become_user: ubuntu
  args:
    chdir: /home/ubuntu/typesense-etl
  shell: /home/ubuntu/.venvs/global/bin/pip install -r requirements.txt


- name: Install Go dependencies for chat server
  become: true
  become_user: ubuntu
  args:
    chdir: /home/ubuntu/chat-service
  shell: go mod tidy


- name: Build Go chat server binary
  become: true
  become_user: ubuntu
  args:
    chdir: /home/ubuntu/chat-service/cmd
  shell: go build -o main main.go


- name : Copy the personal portfolio frontend service file
  become: true
  ansible.builtin.copy:
    src: /home/ubuntu/personal-portfolio-frontend/personal-portfolio-frontend.service
    dest: /etc/systemd/system/personal-portfolio-frontend.service
    remote_src: yes
    owner: root
    group: root
    mode: '0644'


- name : Copy the api gateway service file
  become: true
  ansible.builtin.copy:
    src: /home/ubuntu/api-gateway-service/api-gateway.service
    dest: /etc/systemd/system/api-gateway.service
    remote_src: yes
    owner: root
    group: root
    mode: '0644'


- name : Copy the Blog service file
  become: true
  ansible.builtin.copy:
    src: /home/ubuntu/blog-service/blog-service.service
    dest: /etc/systemd/system/blog-service.service
    remote_src: yes
    owner: root
    group: root
    mode: '0644'


- name : Copy the media static server file
  become: true
  ansible.builtin.copy:
    src: /home/ubuntu/static-media-server/static-media-server.service
    dest: /etc/systemd/system/static-media-server.service
    remote_src: yes
    owner: root
    group: root
    mode: '0644'



- name : Copy the tinyurl service file
  become: true
  ansible.builtin.copy:
    src: /home/ubuntu/tinyurl-service/tinyurl-server.service
    dest: /etc/systemd/system/tinyurl-server.service
    remote_src: yes
    owner: root
    group: root
    mode: '0644'


- name : Copy the academic website service file
  become: true
  ansible.builtin.copy:
    src: /home/ubuntu/academic-website/academic-website-server.service
    dest: /etc/systemd/system/academic-website-server.service
    remote_src: yes
    owner: root
    group: root
    mode: '0644'


- name : Copy the chat server file
  become: true
  ansible.builtin.copy:
    src: /home/ubuntu/chat-service/chat-server.service
    dest: /etc/systemd/system/chat-server.service
    remote_src: yes
    owner: root
    group: root
    mode: '0644'


- name: Reload systemd daemon
  become: true
  ansible.builtin.systemd:
    daemon_reload: true


- name: Enable the blog service
  become: true
  ansible.builtin.systemd:
    name: blog-service
    enabled: true


- name: Start the blog service
  become: true
  ansible.builtin.systemd:
    name: blog-service
    state: started


- name: Enable the static media server service
  become: true
  ansible.builtin.systemd:
    name: static-media-server
    enabled: true


- name: Start the static media server service
  become: true
  ansible.builtin.systemd:
    name: static-media-server
    state: started


- name: Enable the api gateway service
  become: true
  ansible.builtin.systemd:
    name: api-gateway
    enabled: true


- name: Enable the api gateway service
  become: true
  ansible.builtin.systemd:
    name: api-gateway
    state: started


- name: Enable the portfolio service
  become: true
  ansible.builtin.systemd:
    name: personal-portfolio-frontend
    enabled: true


- name: Start the portfolio service
  become: true
  ansible.builtin.systemd:
    name: personal-portfolio-frontend
    state: started



- name: Enable the tinyurl service
  become: true
  ansible.builtin.systemd:
    name: tinyurl-server
    enabled: true


- name: Start the tinyurl
  become: true
  ansible.builtin.systemd:
    name: tinyurl-server
    state: started



- name: Enable the academic website service
  become: true
  ansible.builtin.systemd:
    name: academic-website-server
    enabled: true

- name: Start the academic website service
  become: true
  ansible.builtin.systemd:
    name: academic-website-server
    state: started


- name: Enable the Chat server
  become: true
  ansible.builtin.systemd:
    name: chat-server
    enabled: true


- name: Start the Chat server
  become: true
  ansible.builtin.systemd:
    name: chat-server
    state: started


- name : Copy the data file for mongo ingestion
  ansible.builtin.copy:
    src: files/test_data.json
    dest: /home/ubuntu/mongo-ingestion-and-testing/test_data.json
    owner: ubuntu
    group: ubuntu
    mode: '0600'
  
- name: Data crud operation for mongo ingestion
  become: true
  become_user: ubuntu
  args:
    chdir: /home/ubuntu/mongo-ingestion-and-testing
  shell: /home/ubuntu/.venvs/global/bin/python3 data_crud.py

- name: Data ingestion operation for typesense
  become: true
  become_user: ubuntu
  args:
    chdir: /home/ubuntu/typesense-etl
  shell: /home/ubuntu/.venvs/global/bin/python3 etl_typesense.py
