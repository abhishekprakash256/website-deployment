# ──────────────────────────────────────────────────────────────
# HTTP: Redirect all traffic to HTTPS
# ──────────────────────────────────────────────────────────────
server {
    listen 80;
    server_name www.meabhi.me meabhi.me api.meabhi.me;

    return 301 https://$host$request_uri;
}

# ──────────────────────────────────────────────────────────────
# HTTPS: Main server block
# ──────────────────────────────────────────────────────────────
server {
    listen 443 ssl http2;
    server_name www.meabhi.me meabhi.me;

    # SSL Configuration
    ssl_certificate     /etc/letsencrypt/live/meabhi.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/meabhi.me/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy strict-origin-when-cross-origin;

    # ────────────────────────────────────────────────
    # Serve robots.txt
    # ────────────────────────────────────────────────
    location = /robots.txt {
        root /home/ubuntu/Personal-Portfolio;
        allow all;
    }

    # ────────────────────────────────────────────────
    # Academic Website Service (Flask) - Port 5100
    # ────────────────────────────────────────────────
    location /academic-website/ {
        proxy_pass http://127.0.0.1:5100;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # ────────────────────────────────────────────────
    # Blog Static Files - Port 8080
    # ────────────────────────────────────────────────
    location /static/blog/section/ {
        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # ────────────────────────────────────────────────
    # Message API with CORS - Port 8080
    # ────────────────────────────────────────────────
    location /message/submit {
        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' 'https://www.meabhi.me' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;

        # Handle preflight OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }


    location /tu/ {
        proxy_pass http://localhost:5050;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }


    # ────────────────────────────────────────────────
    # Blog Service - Port 5000
    # ────────────────────────────────────────────────
    location /blog-service/ {
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # ────────────────────────────────────────────────
    # Main Frontend (Next.js) - Port 3000
    # ────────────────────────────────────────────────
    location / {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}



# ──────────────────────────────────────────────────────────────
# HTTPS: API Subdomain (Internal APIs)
# ──────────────────────────────────────────────────────────────
server {
    listen 443 ssl http2;
    server_name api.meabhi.me;

    ssl_certificate     /etc/letsencrypt/live/api.meabhi.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.meabhi.me/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    # Security headers applied to ALL responses
    add_header X-Content-Type-Options nosniff ;
    add_header X-Frame-Options DENY ;
    add_header X-XSS-Protection "1; mode=block" ;
    add_header Referrer-Policy strict-origin-when-cross-origin ;

    # -----------------------------
    # Chat Service CORS & proxy
    # -----------------------------
    location /chat-service/ {
        proxy_pass http://127.0.0.1:8050;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # CORS preflight
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' "$http_origin" always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 1728000 always;
            add_header 'Content-Type' 'text/plain; charset=UTF-8' always;
            add_header 'Content-Length' 0 always;
            return 204;
        }

        # Normal CORS headers
        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
    }


    # ────────────────────────────────────────────────
    # Tiny URL API with CORS - Port 5050
    # ────────────────────────────────────────────────
    location /tu/v1/url/submit {
        proxy_pass http://127.0.0.1:5050;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;

        # Handle preflight OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' "*" always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 1728000 always;
            add_header 'Content-Type' 'text/plain; charset=UTF-8' always;
            add_header 'Content-Length' 0 always;
            return 204;
            }

        }



}