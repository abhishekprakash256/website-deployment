The guide or steps to use to deploy the whole webiste in AWS 

using the ip --> 
-- 3.128.143.84
The ip is very imp don't release it 
is imp as that is attached to Go Daddy console in the Hosting 


The AWS Settings ---> 

For deploying the machine use an instance 

t3.Xlarge or similar as personal-portfolio-front takes resouce to build 

Allow the connections --> 
allow HTTPS , HTTP and SSH in network 

For disk space choose atleast 20GB as it depleats per new development

For OS configuration choose --> 
Ubuntu latest

For the ssh key choose --> 
abhi key

For deploying use the commands --> 
- ansible-playbook -i inventory.ini ansible/deploy.yml -vvv

For rollback use the commands --> 
-  ansible-playbook -i inventory.ini ansible/rollback.yml -vvv

After the deployment the Ec2 instance can be scale down to t2.small for using less resource

Sometimes After the restart the blog-service can go down
can be restarted with systmctl commands

The ports used by the services --> 

Docker Images and ports  --> 

Redis 6379:6379
Mongo  27017:27017
Postgresql 5432:5432
Typesense 8108:8108


commands to run container-->

docker run -d --name redis --network my_network -p 6379:6379 redis:latest

docker run -d --name mongo --network my_network -p 27017:27017 mongo:latest

docker run -d --name postgres-container \
  -e POSTGRES_USER=abhi \
  -e POSTGRES_PASSWORD=mysecretpassword \
  -e POSTGRES_DB=test_db \
  -p 5432:5432 \
  postgres

docker run -d \
  --name typesense \
  --network my_network \
  -p 8108:8108 \
  -v $(pwd)/typesense-data:/data \
  typesense/typesense:29.0.rc30 \
  --data-dir /data \
  --api-key=$TYPESENSE_API_KEY \
  --enable-cors


some docker commands to debug --> 

-- install docker --
-- # Add Docker's official GPG key:
sudo apt-get update
sudo apt-get install ca-certificates curl
sudo install -m 0755 -d /etc/apt/keyrings
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc

# Add the repository to Apt sources:
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update

-- sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

-- docker run without sudo -

    - sudo groupadd docker
    - sudo gpasswd -a $USER docker


-- make the docker network 
    - docker network create my_network

-- run the docker conatiners

    - docker compose up -d (can save the steps)
    - docker compose down (to remove all)














-- install nginx 

    - sudo apt install nginx -y


-- install certbot 

    - sudo apt install certbot python3-certbot-nginx -y


-- make the certification 
    - sudo certbot certonly --non-interactive --nginx --agree-tos --email abhishekprakash47@gmail.com -d meabhi.me

-- put the config file in place for nginx
 - in location /etc/nginx/sites-available
  
- test the nginx 
 - sudo nginx -t

- reload nginx 
 - sudo systemctl reload nginx


-- run the conatainer or before
-- injest the data 


The ports -

nginx - 80, 443 , 27017
nextjs front end - 3000
tiny-url service - 5050
static-media-server - 8080
chat server - 8050
blog-service -5000
acdemic-service - 5100





active the virtual env
source /home/ubuntu/.venvs/global/bin/activate

curl http://localhost:5000/blog/section/project/federated-learning/federated-learning-flow.png

[Unit]
Description=Personal Portfolio Frontend (Next.js)
After=network.target

[Service]
Type=simple
User=ubuntu
WorkingDirectory=/home/ubuntu/personal-portfolio-frontend
ExecStart=/usr/bin/npm start
Restart=always
RestartSec=5
Environment=NODE_ENV=production
StandardOutput=journal
StandardError=journal

[Install]
WantedBy=multi-user.target



sudo cp /home/ubuntu/personal-portfolio-frontend.service /etc/systemd/system/
sudo systemctl daemon-reload
sudo systemctl enable personal-portfolio-frontend
sudo systemctl start personal-portfolio-frontend
sudo systemctl status personal-portfolio-frontend







this folder is in gdrive as well 
put it in ccorrect location --
under ansible/files
it is done by ansible already
files need to be copy from webiste-deploymnet 

ansible/files/